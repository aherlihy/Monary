<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="installing">
  <title>Installing the MongoDB C Driver</title>

  <p>The following guide will step you through the process of downloading, building, and installing the current release of the MongoDB C Driver.</p>

  <section id="supported-platforms">
    <info><link type="guide" xref="index#installation" /></info>

    <title>Supported Platforms</title>

    <p>The MongoDB C Driver currently supports the following operating systems and CPU architectures.</p>

    <table>
      <tr>
        <td><title>Operating Systems</title></td>
        <td><title>CPU Architectures</title></td>
        <td><title>Compiler Toolchain</title></td>
      </tr>
      <tr>
        <td>
          <list>
            <item><p>GNU/Linux</p></item>
            <item><p>Solaris 10 and 11</p></item>
            <item><p>Mac OS X 10.6 and newer</p></item>
            <item><p>Windows Vista, 7, and 8</p></item>
            <item><p>FreeBSD</p></item>
            <item><p>OpenBSD 5.4</p></item>
            <item><p>Dragonfly BSD</p></item>
          </list>
        </td>
        <td>
          <list>
            <item><p>x86 and x86_64</p></item>
            <item><p>ARM</p></item>
            <item><p>PPC</p></item>
            <item><p>SPARC</p></item>
          </list>
        </td>
        <td>
          <list>
            <item><p>GCC 4.1 and newer</p></item>
            <item><p>Clang 3.3 and newer</p></item>
            <item><p><link href="http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#DownloadFamilies_4">Microsoft Visual Studio 2010 Express</link></p></item>
            <item><p><link href="http://www.oracle.com/technetwork/server-storage/solarisstudio/downloads/index.html">Oracle Solaris Studio 12</link></p></item>
            <item><p>MinGW</p></item>
          </list>
        </td>
      </tr>
    </table>

  </section>

  <section id="build-yourself">
    <info><link type="guide" xref="index#installation" /></info>
    <title>Installing from Source</title>

    <p>The following instructions are for UNIX-like systems such as GNU/Linux, FreeBSD, and Solaris. To build on Windows, see the instructions for <link xref="installing#building-windows">Building on Windows</link>.</p>

    <p>The most recent release of the mongo-c-driver is 1.0.0 and can be <link href="https://github.com/mongodb/mongo-c-driver/releases/download/1.0.0/mongo-c-driver-1.0.0.tar.gz">downloaded here</link>. The following snippet will download and extract the current release of the driver.</p>

    <screen><output style="prompt">$ </output><input>wget https://github.com/mongodb/mongo-c-driver/releases/download/1.0.0/mongo-c-driver-1.0.0.tar.gz</input>
<output style="prompt">$ </output><input>tar -xzf mongo-c-driver-1.0.0.tar.gz</input>
<output style="prompt">$ </output><input>cd mongo-c-driver-1.0.0/</input></screen>

    <p>Minimal dependencies are needed to build the MongoDB C driver. Optionally, if you want Kerberos (GSSAPI) or SSL support, you need to install <code>libsasl2</code> and <code>OpenSSL</code> libraries and development headers respectively.</p>

    <p>Make sure you have access to a <link xref="installing#supported-platforms">supported toolchain</link> such as GCC, Clang, SolarisStudio, or MinGW. Optionally, <code>pkg-config</code> can be used if your system supports it to simplify locating proper compiler and linker arguments when compiling your program.</p>

    <p>The following will configure for a typical 64-bit Linux system such as RedHat Enterprise Linux 6 or CentOS 6. Note that not all systems place 64-bit libraries in <code>/usr/lib64</code>. Check your system to see what the convention is if you are building 64-bit versions of the library.</p>

    <screen>./configure --prefix=/usr --libdir=/usr/lib64</screen>

    <note style="advanced">
      <p>If you require <code>SSL</code> add <code>--enable-ssl</code> to the above configuration. This will require the <code>openssl-devel</code> on RedHat Entrprise Linux. Other Linux-based operating systems may have another name for this package such as <code>libssl-dev</code> on Debian.</p>
    </note>

    <note style="advanced">
      <p>If you require <code>Kerberos</code> add <code>--enable-sasl</code> to the above configuration. This will require the <code>cyris-sasl-devel</code> on RedHat Entrprise Linux. Other Linux-based operating systems may have another name for this package.</p>
    </note>

    <p>If <code>configure</code> completed successfully, you'll see something like the following describing your build configuration.</p>

    <screen>libmongoc was configured with the following options:

Build configuration:
Enable debugging (slow)                          : no
Compile with debug symbols (slow)                : no
Enable GCC build optimization                    : yes
Enable automatic binary hardening                : yes
Code coverage support                            : no
Cross Compiling                                  : no
Fast counters                                    : no
SASL                                             : sasl2
SSL                                              : yes
Libbson                                          : bundled

Documentation:
Generate man pages                               : yes
Install man pages                                : yes
</screen>

    <p>We can now build the driver with the venerable <code>make</code> program.</p>

    <screen><output style="prompt">$ </output><input>make</input></screen>

    <note>
      <p>You can optionally build code objects in parallel using the <code>-j</code> option to GNU make. Some implementations of <code>make</code> do not support this option, such as Sun's make on Solaris 10. To build in parallel on an 8 core machine, you might use:</p>
      <screen><output style="prompt">$ </output><input>gmake -j8</input></screen>
    </note>

    <p>To install the driver, we use <code>make</code> with the <code>install</code> target.</p>

    <screen><output style="prompt">$ </output><input>sudo make install</input></screen>

    <note>
      <p>On systems that do not support the <code>sudo</code> command, we can use <code>su -c 'make install'</code>.</p>
    </note>

  </section>

  <section id="solaris">
    <info><link type="guide" xref="index#installation" /></info>
    <title>Installing on Solaris 10</title>
    <p>MongoDB provides two ways to install the MongoDB C driver on Solaris 10. You can either <link xref="installing#build-yourself">build the driver yourself</link> from a source code release, or install the precompiled binary driver as provided by MongoDB as follows.</p>
    <p>Binary releases of the MongoDB C driver include support for both 32-bit and 64-bit architectures for both <code>i386</code> and <code>sparc</code>.</p>
    <note style="warning"><p>Solaris 11 packaging is not compatible with Solaris 10. For Solaris 11, please follow the directions to <link xref="installing#build-yourself">build the driver yourself</link>.</p></note>
    <p>The following commands will download the most recent MongoDB binary release and install it using the <code>pkgadd</code> command on Solaris 10.</p>
      <screen><output style="prompt">$ </output><input>bash</input>
<output style="prompt">bash-3.2$ </output><input>export ARCH=`uname -m`</input>
<output style="prompt">bash-3.2$ </output><input>/usr/sfw/bin/wget --no-check-certificate "https://github.com/mongodb/mongo-c-driver/releases/download/1.0.0/MONGOmongo-c-driver-1.0.0.${ARCH}.pkg.tar.gz"</input>
<output style="prompt">bash-3.2$ </output><input>gunzip -c "MONGOmongo-c-driver-1.0.0.${ARCH}.pkg.tar.gz" | tar -xf -</input>
<output style="prompt">bash-3.2$ </output><input>pkgadd -d . MONGOmongo-c-driver</input></screen>

  </section>

  <section id="building-windows">
    <title>Building on Windows</title>

    <p>Building on Windows requires Windows Vista or newer and Visual Studio 2010 or newer. Additionally, <code>cmake</code> is required to generate Visual Studio project files.</p>

    <p>Let's start by generating Visual Studio project files for libbson, a dependency of the C driver. The following assumes we are compiling for 64-bit Windows using Visual Studio 2010 Express which can be freely downloaded from Microsoft.</p>

    <screen>cd mongo-c-driver-1.0.0\src\libbson
cmake -G "Visual Studio 10 Win64" "-DCMAKE_INSTALL_PREFIX=C:\mongo-c-driver"</screen>

    <p>Now that we have project files generated, we can either open the project in Visual Studio or compile from the command line. Let's build using the command line program <code>msbuild.exe</code></p>

    <screen>msbuild.exe ALL_BUILD.vcxproj</screen>

    <p>Now that libbson is compiled, let's install it using msbuild. It will be installed to the path specified by <code>CMAKE_INSTALL_PREFIX</code>.</p>

    <screen>msbuild.exe INSTALL.vcxproj</screen>

    <p>You should now see libbson installed in <code>C:\mongo-c-driver</code></p>.

    <p>Now let's do the same for the MongoDB C driver.</p>

    <screen>cd mongo-c-driver-1.0.0
cmake -G "Visual Studio 2010 Win64" "-DCMAKE_INSTALL_PREFIX=C:\mongo-c-driver" "-DBSON_ROOT_DIR=C:\mongo-c-driver"
msbuild.exe ALL_BUILD.vcxproj
msbuild.exe INSTALL.vcxproj</screen>

    <p>All of the MongoDB C Driver's components will now be found in <code>C:\mongo-c-driver</code>.</p>
  </section>

</page>
